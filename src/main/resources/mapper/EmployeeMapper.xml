<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.uoumeng.umooc.dao.EmployeeMapper" >
  <resultMap id="BaseResultMap" type="com.uoumeng.umooc.entity.Employee" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="CHAR" />
    <result column="passwd" property="passwd" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="roleid" property="roleid" jdbcType="INTEGER" />
    <result column="deptid" property="deptid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, mobile, passwd, qq, status, roleid, deptid
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.uoumeng.umooc.entity.Employee" >
    insert into employee (id, mobile, passwd, 
      qq, status, roleid, deptid
      )
    values (#{id,jdbcType=INTEGER}, #{mobile,jdbcType=CHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{qq,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{roleid,jdbcType=INTEGER}, #{deptid,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.uoumeng.umooc.entity.Employee" >
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="passwd != null" >
        passwd,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="roleid != null" >
        roleid,
      </if>
      <if test="deptid != null" >
        deptid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="passwd != null" >
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="deptid != null" >
        #{deptid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.uoumeng.umooc.entity.Employee" >
    update employee
    <set >
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="passwd != null" >
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="roleid != null" >
        roleid = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="deptid != null" >
        deptid = #{deptid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uoumeng.umooc.entity.Employee" >
    update employee
    set mobile = #{mobile,jdbcType=CHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      roleid = #{roleid,jdbcType=INTEGER},
      deptid = #{deptid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>