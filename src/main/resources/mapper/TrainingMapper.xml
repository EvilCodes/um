<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.uoumeng.umooc.dao.TrainingMapper" >
  <resultMap id="BaseResultMap" type="com.uoumeng.umooc.entity.Training" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="degree" property="degree" jdbcType="CHAR" />
    <result column="question" property="question" jdbcType="VARCHAR" />
    <result column="optiona" property="optiona" jdbcType="VARCHAR" />
    <result column="optionb" property="optionb" jdbcType="VARCHAR" />
    <result column="optionc" property="optionc" jdbcType="VARCHAR" />
    <result column="optiond" property="optiond" jdbcType="VARCHAR" />
    <result column="answer" property="answer" jdbcType="VARCHAR" />
    <result column="explan" property="explan" jdbcType="VARCHAR" />
    <result column="chid" property="chid" jdbcType="INTEGER" />
    <result column="seid" property="seid" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, degree, question, optiona, optionb, optionc, optiond, answer, explan, chid, 
    seid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.uoumeng.umooc.entity.TrainingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from training
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from training
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from training
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.uoumeng.umooc.entity.TrainingExample" >
    delete from training
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.uoumeng.umooc.entity.Training" >
    insert into training (id, type, degree, question, 
      optiona, optionb, optionc, 
      optiond, answer, explan, 
      chid, seid)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=CHAR}, #{degree,jdbcType=CHAR}, #{question,jdbcType=VARCHAR}, 
      #{optiona,jdbcType=VARCHAR}, #{optionb,jdbcType=VARCHAR}, #{optionc,jdbcType=VARCHAR}, 
      #{optiond,jdbcType=VARCHAR}, #{answer,jdbcType=VARCHAR}, #{explan,jdbcType=VARCHAR}, 
      #{chid,jdbcType=INTEGER}, #{seid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.uoumeng.umooc.entity.Training" >
    insert into training
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="question != null" >
        question,
      </if>
      <if test="optiona != null" >
        optiona,
      </if>
      <if test="optionb != null" >
        optionb,
      </if>
      <if test="optionc != null" >
        optionc,
      </if>
      <if test="optiond != null" >
        optiond,
      </if>
      <if test="answer != null" >
        answer,
      </if>
      <if test="explan != null" >
        explan,
      </if>
      <if test="chid != null" >
        chid,
      </if>
      <if test="seid != null" >
        seid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=CHAR},
      </if>
      <if test="question != null" >
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="optiona != null" >
        #{optiona,jdbcType=VARCHAR},
      </if>
      <if test="optionb != null" >
        #{optionb,jdbcType=VARCHAR},
      </if>
      <if test="optionc != null" >
        #{optionc,jdbcType=VARCHAR},
      </if>
      <if test="optiond != null" >
        #{optiond,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="explan != null" >
        #{explan,jdbcType=VARCHAR},
      </if>
      <if test="chid != null" >
        #{chid,jdbcType=INTEGER},
      </if>
      <if test="seid != null" >
        #{seid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.uoumeng.umooc.entity.TrainingExample" resultType="java.lang.Integer" >
    select count(*) from training
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update training
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.degree != null" >
        degree = #{record.degree,jdbcType=CHAR},
      </if>
      <if test="record.question != null" >
        question = #{record.question,jdbcType=VARCHAR},
      </if>
      <if test="record.optiona != null" >
        optiona = #{record.optiona,jdbcType=VARCHAR},
      </if>
      <if test="record.optionb != null" >
        optionb = #{record.optionb,jdbcType=VARCHAR},
      </if>
      <if test="record.optionc != null" >
        optionc = #{record.optionc,jdbcType=VARCHAR},
      </if>
      <if test="record.optiond != null" >
        optiond = #{record.optiond,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null" >
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.explan != null" >
        explan = #{record.explan,jdbcType=VARCHAR},
      </if>
      <if test="record.chid != null" >
        chid = #{record.chid,jdbcType=INTEGER},
      </if>
      <if test="record.seid != null" >
        seid = #{record.seid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update training
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=CHAR},
      degree = #{record.degree,jdbcType=CHAR},
      question = #{record.question,jdbcType=VARCHAR},
      optiona = #{record.optiona,jdbcType=VARCHAR},
      optionb = #{record.optionb,jdbcType=VARCHAR},
      optionc = #{record.optionc,jdbcType=VARCHAR},
      optiond = #{record.optiond,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      explan = #{record.explan,jdbcType=VARCHAR},
      chid = #{record.chid,jdbcType=INTEGER},
      seid = #{record.seid,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.uoumeng.umooc.entity.Training" >
    update training
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=CHAR},
      </if>
      <if test="question != null" >
        question = #{question,jdbcType=VARCHAR},
      </if>
      <if test="optiona != null" >
        optiona = #{optiona,jdbcType=VARCHAR},
      </if>
      <if test="optionb != null" >
        optionb = #{optionb,jdbcType=VARCHAR},
      </if>
      <if test="optionc != null" >
        optionc = #{optionc,jdbcType=VARCHAR},
      </if>
      <if test="optiond != null" >
        optiond = #{optiond,jdbcType=VARCHAR},
      </if>
      <if test="answer != null" >
        answer = #{answer,jdbcType=VARCHAR},
      </if>
      <if test="explan != null" >
        explan = #{explan,jdbcType=VARCHAR},
      </if>
      <if test="chid != null" >
        chid = #{chid,jdbcType=INTEGER},
      </if>
      <if test="seid != null" >
        seid = #{seid,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uoumeng.umooc.entity.Training" >
    update training
    set type = #{type,jdbcType=CHAR},
      degree = #{degree,jdbcType=CHAR},
      question = #{question,jdbcType=VARCHAR},
      optiona = #{optiona,jdbcType=VARCHAR},
      optionb = #{optionb,jdbcType=VARCHAR},
      optionc = #{optionc,jdbcType=VARCHAR},
      optiond = #{optiond,jdbcType=VARCHAR},
      answer = #{answer,jdbcType=VARCHAR},
      explan = #{explan,jdbcType=VARCHAR},
      chid = #{chid,jdbcType=INTEGER},
      seid = #{seid,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>